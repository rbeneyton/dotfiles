# remind format:
# "src in repo" = "install dst"

# XXX
# fix handlebars/vim fold marker incompatibility in order to use template
# so use [[[ for all template (+ vim modeline)
# otherwise explicit via $SRC = { target = "$DST", type = "symbolic" }

# bash
[bash.files]
"bash/bashrc" = "~/.bashrc"
"bash/bash_profile" = "~/.bash_profile"
"bash/automirror.sh" = "~/.bash_automirror.sh"
"bash/complete-alias/complete_alias" = "~/.complete_alias"

# fish
[fish.files]
"fish/config.fish" = "~/.config/fish/config.fish"
"fish/bass/functions/bass.fish" = "~/.config/fish/functions/bass.fish"
"fish/bass/functions/__bass.py" = "~/.config/fish/functions/__bass.py"
"fish/completions/conda.fish" = "~/.config/fish/completions/conda.fish"
"vim/pack/theme/opt/kanagawa/extras/kanagawa.fish" = "~/.config/fish/conf.d/kanagawa.fish"

# top
[top.files]
# toprc is invalid UTF8, so force type
"top/toprc" = { target = "~/.toprc", type = "symbolic" }

# gdb
[gdb.files]
"gdb/gdbinit" = "~/.gdbinit"
"gdb/gdbearlyinit" = "~/.config/gdb/gdbearlyinit"
"gdb/own" = { target = "~/.config/gdb/own/own", type = "symbolic" }
"gdb/eigengdb/bin" = { target = "~/.config/gdb/eigengdb/bin", type = "symbolic" }
"gdb/eigengdb/eigengdb" = { target = "~/.config/gdb/eigengdb/eigengdb", type = "symbolic" }
"gdb/pahole/offsets.py" = { target = "~/.config/gdb/pahole/offsets.py", type = "symbolic" }
"gdb/pahole/pahole.py" = { target = "~/.config/gdb/pahole/pahole.py", type = "symbolic" }
"gdb/source-highlight/src" = { target = "~/.source-highlight", type = "symbolic", recurse = false }

# valgrind
[valgrind.files]
"valgrind/valgrindrc" = "~/.valgrindrc"

# awesome
[awesome.files]
"awesome/rc.lua"    = "~/.config/awesome/rc.lua"
"awesome/theme.lua" = "~/.config/awesome/theme.lua"
"awesome/data" = { target = "~/.config/awesome/data", type = "symbolic", recurse = false }
"awesome/awesome-wm-widgets" = { target = "~/.config/awesome/awesome-wm-widgets", type = "symbolic", recurse = false }
"awesome/json.lua/json.lua" = { target = "~/.config/awesome/json.lua", type = "symbolic" }
"awesome/dim-screen.sh" = "~/.config/awesome/dim-screen.sh"
[awesome.variables]
awesome_network_interface = "eth0"
awesome_xset_wait_period = "120"
awesome_xset_burn_period = "130"

# alacritty
[alacritty.files]
"alacritty/alacritty.yml" = "~/.config/alacritty/alacritty.yml"

# xkb
[xkb.files]
# sadly defining all in a unique keymap main file seems unsupported
"xkb/symbols/rb" = "~/.config/xkb/symbols/rb"
"xkb/types/rb" = "~/.config/xkb/types/rb"
"xkb/keymap/keymap.xkb" = "~/.config/xkb/keymap/keymap.xkb"
# force file for inputplug command argument
"xkb/inputplug.sh" = { target = "~/.config/xkb/inputplug.sh", type = "template" }

# redshift
[redshift.files]
# apparmor blocks access to configuration if symlink (#977672), so force copy
"redshift/redshift.conf" = { target = "~/.config/redshift.conf", type = "template" }
[redshift.variables]
redshift_night_temperature = "3800K"
redshift_lat = "48.85"
redshift_lon = "2.35"

# compose key
[compose.files]
"compose/XCompose" = "~/.XCompose"

# gtk
[gtk.files]
"gtk/settings.ini" = "~/.config/gtk-3.0/settings.ini"
"gtk/gtkrc-2.0" = "~/.gtkrc-2.0"

# fonts
[fonts.files]
"fonts/DejaVu Sans Mono Bold Nerd Font Complete Mono.ttf" = { target = "~/.fonts/DejaVu Sans Mono Bold Nerd Font Complete Mono.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Bold Nerd Font Complete.ttf" = { target = "~/.fonts/DejaVu Sans Mono Bold Nerd Font Complete.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Bold Oblique Nerd Font Complete Mono.ttf" = { target = "~/.fonts/DejaVu Sans Mono Bold Oblique Nerd Font Complete Mono.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Bold Oblique Nerd Font Complete.ttf" = { target = "~/.fonts/DejaVu Sans Mono Bold Oblique Nerd Font Complete.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Nerd Font Complete Mono.ttf" = { target = "~/.fonts/DejaVu Sans Mono Nerd Font Complete Mono.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Nerd Font Complete.ttf" = { target = "~/.fonts/DejaVu Sans Mono Nerd Font Complete.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Oblique Nerd Font Complete Mono.ttf" = { target = "~/.fonts/DejaVu Sans Mono Oblique Nerd Font Complete Mono.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Oblique Nerd Font Complete.ttf" = { target = "~/.fonts/DejaVu Sans Mono Oblique Nerd Font Complete.ttf", type = "symbolic" }
# TODO post_deploy.sh to call fc-cache -fv

# starship
[starship.files]
"starship/starship.toml" = "~/.config/starship.toml"

# git
[git.files]
"git/gitconfig" = "~/.gitconfig"
"git/include.gitconfig" = "~/.gitconfig.include"
"git/gitignore.main" = "~/.gitignore"
"git/git-submodule-align" = "~/bin/git-submodule-align"
"git/tigrc" = "~/.tigrc"
[git.variables]
git_name = "Richard Beneyton"
git_email = "richard.beneyton@gmail.com"

# tmux
[tmux.files]
"tmux/tmux.conf" = "~/.config/tmux/tmux.conf"

# vim
[vim.files]
"vim/vimrc.template" = { target = "~/.vimrc", type = "template" }
"vim" = { target = "~/.vim", type = "symbolic", recurse = false }
"nvim" = { target = "~/.config/nvim", type = "symbolic", recurse = false }

# rust
[rust.files]
"rust/cargo.toml" = "~/.cargo/config.toml"

# conda
[conda.files]
"conda/condarc" = "~/.condarc"

# zathura
[zathura.files]
"zathura/config.rc" = "~/.config/zathura/zathurarc"

# firefox
[firefox.files]
# need link build by pre_deploy.sh
"firefox/userChrome.css" = "~/.mozilla/firefox/link.default/chrome/userChrome.css"

# dummy "flag only" packages
[bluetooth.variables]
[laptop.variables]
[mac.variables]

# package group
[base]
depends = [
    "alacritty",
    "awesome",
    "bash",
    "bluetooth",
    "compose",
    "conda",
    "firefox",
    "fish",
    "fonts",
    "gdb",
    "git",
    "gtk",
    "redshift",
    "rust",
    "starship",
    "tmux",
    "top",
    "valgrind",
    "vim",
    "xkb",
    "zathura",
]

# vim: filetype=cfg
