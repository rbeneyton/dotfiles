# remind format:
# "src in repo" = "install dst"

# XXX
# fix handlebars/vim fold market incompatibility in order to use template
# so use [[[ for all template
# otherwise explicit via = { target = "DST", type = "symbolic" }

# bash
[bash.files]
"bash/bashrc" = "~/.bashrc"
"bash/bash_profile" = "~/.bash_profile"
"bash/automirror.sh" = "~/.bash_automirror.sh"
[bash.variables]
# nop

# gdb
[gdb.files]
"gdb/gdbinit" = "~/.gdbinit"
"gdb/own" = { target = "~/.config/gdb/own/own", type = "symbolic" }
"gdb/eigengdb/bin" = { target = "~/.config/gdb/eigengdb/bin", type = "symbolic" }
"gdb/eigengdb/eigengdb" = { target = "~/.config/gdb/eigengdb/eigengdb", type = "symbolic" }
"gdb/pahole/offsets.py" = { target = "~/.config/gdb/pahole/offsets.py", type = "symbolic" }
"gdb/pahole/pahole.py" = { target = "~/.config/gdb/pahole/pahole.py", type = "symbolic" }

# awesome
[awesome.files]
"awesome/rc.lua"    = "~/.config/awesome/rc.lua"
"awesome/theme.lua" = "~/.config/awesome/theme.lua"
"awesome/data" = { target = "~/.config/awesome/data", type = "symbolic" }
"awesome/awesome-wm-widgets/volume-widget" = { target = "~/.config/awesome/awesome-wm-widgets/volume-widget", type = "symbolic" }
"awesome/awesome-wm-widgets/batteryarc-widget" = { target = "~/.config/awesome/awesome-wm-widgets/batteryarc-widget", type = "symbolic" }
"awesome/awesome-wm-widgets/brightness-widget" = { target = "~/.config/awesome/awesome-wm-widgets/brightness-widget", type = "symbolic" }
"awesome/awesome-wm-widgets/todo-widget" = { target = "~/.config/awesome/awesome-wm-widgets/todo-widget", type = "symbolic" }
"awesome/json.lua/json.lua" = { target = "~/.config/awesome/json.lua", type = "symbolic" }
[awesome.variables]
awesome_network_interface = "eth0"

# alacritty
[alacritty.files]
"alacritty/alacritty.yml" = "~/.config/alacritty/alacritty.yml"

# xkb
[xkb.files]
# sadly defining all in a unique keymap main file seems unsupported
"xkb/symbols/rb" = "~/.config/xkb/symbols/rb"
"xkb/types/rb" = "~/.config/xkb/types/rb"
"xkb/keymap/keymap.xkb" = "~/.config/xkb/keymap/keymap.xkb"
# force file for inputplug command argument
"xkb/inputplug.sh" = { target = "~/.config/xkb/inputplug.sh", type = "template" }

# redshift
[redshift.files]
# apparmor blocks access to configuration if symlink (#977672), so force copy
"redshift/redshift.conf" = { target = "~/.config/redshift.conf", type = "template" }

# compose
[compose.files]
"compose/XCompose" = "~/.XCompose"

# gtk
[gtk.files]
"gtk/settings.ini" = "~/.config/gtk-3.0/settings.ini"

# fonts
[fonts.files]
"fonts/DejaVu Sans Mono Bold Nerd Font Complete Mono.ttf" = { target = "~/.fonts/DejaVu Sans Mono Bold Nerd Font Complete Mono.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Bold Nerd Font Complete.ttf" = { target = "~/.fonts/DejaVu Sans Mono Bold Nerd Font Complete.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Bold Oblique Nerd Font Complete Mono.ttf" = { target = "~/.fonts/DejaVu Sans Mono Bold Oblique Nerd Font Complete Mono.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Bold Oblique Nerd Font Complete.ttf" = { target = "~/.fonts/DejaVu Sans Mono Bold Oblique Nerd Font Complete.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Nerd Font Complete Mono.ttf" = { target = "~/.fonts/DejaVu Sans Mono Nerd Font Complete Mono.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Nerd Font Complete.ttf" = { target = "~/.fonts/DejaVu Sans Mono Nerd Font Complete.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Oblique Nerd Font Complete Mono.ttf" = { target = "~/.fonts/DejaVu Sans Mono Oblique Nerd Font Complete Mono.ttf", type = "symbolic" }
"fonts/DejaVu Sans Mono Oblique Nerd Font Complete.ttf" = { target = "~/.fonts/DejaVu Sans Mono Oblique Nerd Font Complete.ttf", type = "symbolic" }
# TODO post_deploy.sh to call fc-cache -fv

# starship
[starship.files]
"starship/starship.toml" = "~/.config/starship.toml"

# git
[git.files]
"git/gitconfig" = "~/.gitconfig"
"git/include.gitconfig" = "~/.gitconfig.include"

# dummy "flag only" packages
[bluetooth.variables]
[laptop.variables]
[mac.variables]

# vim: filetype=cfg
